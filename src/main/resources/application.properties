## Este arquivo precisa ser codificado em UTF-8 !

spring.application.name=user-access-template

########## DataSoure

spring.datasource.url=jdbc:mysql://localhost:3306/template?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=mysql

mail.sender=???????@gmail.com
mail.password=????????
mail.smtp-host=smtp.gmail.com
mail.smtp-port=465
mail.confirm-user-url=http://localhost:8080/user/open/confirm
mail.confirm-reset-url=http://localhost:8080/user/open/reset-confirm

#usado somente para auxiliar o desenvolvimento para criar as tabelas
#Desabilitado a partir do momento em que comecamos a usar o Flyway
#spring.jpa.generate-ddl=true

##Indica para dropaar as tabelas e recriar
#spring.jpa.hibernate.ddl-auto=create
##    a file named import.sql in the root of the classpath is executed on startup 
##    if Hibernate creates the schema from scratch, 
##    that is, if the ddl-auto property is set to create or create-drop.
 
## 3.17 O dialeto especifica como o hibernate vai proceder com o banco, principalmente na hora de gerar DDLs.
## EX: o dialeto pode mudar o tipo de schema usado pelo Hibernate ( "Innodb" no lugar de "MyISAN")
## o dialeto eh uma Classe 
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect(800)

##mostral os SQLs gerados nos logs do console.
spring.jpa.show-sql=true

## Usado somente para gerar o DDL do banco pelo JPA (Com os Imports)  
## Comentar novamente depois.
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

## Dados de Test  para substituir o "import.sql" que foi usado antes do Flyway
## Sera usado o arquivo de callback "afterMigrate.sql" (nome fixo) localizado em "db/devData"
## a pasta devData deve ser mapeada APENAS para DESENVOLVIMENTO.
## Default: spring.flyway.locations=classpath:db/migration
spring.flyway.locations=classpath:db/migration,classpath:db/devData

## Configurar o Pool de Conexoes Hikari
#spring.datasource.hikari.maximum-pool-size=5
#spring.datasource.hikari.minimum-idle=3
#spring.datasource.hikari.idle-timeout=10000


########## Web e thymeleaf

spring.web.locale-resolver=fixed
spring.web.locale=pt_BR

#Altera para HTML o modo de templates que o Thymeleaf irá trabalhar 
spring.thymeleaf.mode=html
#Para que ele não faça cache das páginas, pelo menos, enquanto estivermos desenvolvendo o projeto.
spring.thymeleaf.cache=false


#DispatcherServlet to listening at http://localhost:8080/demo/baeldung/.
#server.servlet.context-path=/demo
#spring.mvc.servlet.path=/baeldung

#spring.mvc.servlet.path=/s

##########  Security
#22.2 usuario e senha para acesso aa aplicação com http basic
#spring.security.user.name=user
#spring.security.user.password=123

