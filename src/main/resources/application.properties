## Este arquivo precisa ser codificado em UTF-8 !

spring.application.name=user-access-template

########## DataSoure

spring.datasource.url=jdbc:mysql://localhost:3306/template?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=mysql

mail.sender=???????@???
mail.user-id=????
mail.password=????
#mail.smtp-host=smtp.gmail.com
mail.smtp-host=smtp.sendgrid.net
#SSL port
mail.smtp-port=465

spring.sql.init.mode=always

#spring.threads.virtual.enabled=true
#spring.threads.virtual.enabled=false
#server.tomcat.threads.max=10


mail.confirm-user-url=http://localhost:8080/user/open/confirm
mail.confirm-reset-url=http://localhost:8080/user/open/reset-confirm

##mostral os SQLs gerados nos logs do console.
spring.jpa.show-sql=true

## Dados de Test  para substituir o "import.sql" que foi usado antes do Flyway
## Sera usado o arquivo de callback "afterMigrate.sql" (nome fixo) localizado em "db/devData"
## a pasta devData deve ser mapeada APENAS para DESENVOLVIMENTO.
## Default: spring.flyway.locations=classpath:db/migration
spring.flyway.locations=classpath:db/migration,classpath:db/devData

## Configurar o Pool de Conexoes Hikari
#spring.datasource.hikari.maximum-pool-size=5
#spring.datasource.hikari.minimum-idle=3
#spring.datasource.hikari.idle-timeout=10000


########## Web e thymeleaf
spring.web.locale-resolver=fixed
spring.web.locale=pt_BR

#Altera para HTML o modo de templates que o Thymeleaf irá trabalhar 
spring.thymeleaf.mode=html
#Para que ele não faça cache das páginas, pelo menos, enquanto estivermos desenvolvendo o projeto.
spring.thymeleaf.cache=false

#DispatcherServlet to listening at http://localhost:8080/context-path/path/.
#server.servlet.context-path=/demo
#spring.mvc.servlet.path=/path
